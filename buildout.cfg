[buildout]
parts =
    plone
    zope2
    productdistros
    instance
    zopepy
    junit
    solr-download
    solr-build
    solr-instance

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    elementtree
    collective.solr
    collective.indexing

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/collective.recipe.ant
    src/collective.recipe.solrinstance
    src/collective.solr
    src/collective.indexing

[plone]
recipe = plone.recipe.plone >=3.0,<3.1dev

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ${buildout:eggs}
    ${plone:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.indexing
    collective.solr

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${plone:products}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[junit]
recipe = hexagonit.recipe.download
url = http://heanet.dl.sourceforge.net/sourceforge/junit/junit-4.4.jar
destination = ${buildout:directory}/javalib
download-only = true

[solr-download]
recipe = hexagonit.recipe.download
url = http://apache.4any.org/lucene/solr/1.2/apache-solr-1.2.0.tgz

[solr-build]
recipe = collective.recipe.ant
classpath = ${junit:destination}
ant-options =
    compile
    example
    -buildfile ${solr-download:location}/apache-solr-1.2.0/build.xml

[solr-instance]
recipe = collective.recipe.solrinstance
solr-location = ${solr-download:location}/apache-solr-1.2.0
host = localhost
port = 8983
basepath = /solr
max-num-results = 100
default-search-field = default
unique-key = UID
index =
    name:UID              type:string stored:true required:true
    name:Title            type:text copyfield:default copyfield:Title_sort stored:true
    name:Title_sort       type:string stored:false
    name:getPhysicalPath  type:string stored:true
    name:default          type:text indexed:true stored:false multivalued:true omitnorms:true
    name:Subject          type:string copyfield:default stored:true multivalued:true
    name:Description      type:text copyfield:default stored:true
    name:Creator          type:string stored:true
    name:Date             type:date stored:true
    name:SearchableText   type:text copyfield:default stored:false
    name:Type             type:string stored:true
    name:allowedRolesAndUsers type:string stored:false multivalued:true
    name:created          type:date stored:true
    name:effective        type:date stored:true
    name:expires          type:date stored:true
    name:getIcon          type:string indexed:false stored:true
    name:getId            type:string indexed:false stored:true
    name:modified         type:date stored:true
    name:portal_type      type:string stored:true
    name:review_state     type:string stored:true

